/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ur;


import acceso.AccesoControl;
import java.util.List;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.ManagedProperty;
import javax.faces.bean.SessionScoped;
import org.primefaces.PrimeFaces;
import org.primefaces.model.StreamedContent;
import personal.Personal;
import personal.PersonalDAO;
import reportes.ReportesControl;
import utilerias.Mensaje;
@ManagedBean (name = "urControl")
@SessionScoped
public class UrControl implements java.io.Serializable {
   @ManagedProperty(value = "#{accesoC}")
   private AccesoControl accesoC;
   private final UrDAO urdao;
   private final PersonalDAO pdao;
   private List<Ur> urs;
   private List<Ur> ursgrupo;
   private Ur ur;
   private Ur urSeleccionada;
   private List<Personal> personal;
   private List<Ur> filteredUr;
   private ReportesControl rc;
   private StreamedContent file;
   private String valorBuscado;
   private final Mensaje msg= new Mensaje();
   public UrControl() {
      urdao = new UrDAO();
      pdao = new PersonalDAO();
      ur = new Ur();
      rc=new ReportesControl();
   }
   
   public void init() {
        urs = urdao.traeRegistros();
        urSeleccionada=null;
   }

    public List<Ur> getUrs() {
        return urs;
    }

    public void setUrs(List<Ur> urs) {
        this.urs = urs;
    }

    public Ur getUr() {
        return ur;
    }

    public void setUr(Ur ur) {
        this.ur = ur;
    }

    public List<Ur> getFilteredUr() {
        return filteredUr;
    }

    public void setFilteredUr(List<Ur> filteredUr) {
        this.filteredUr = filteredUr;
    }

    public List<Ur> getUrsgrupo() {
        return ursgrupo;
    }

    public void setUrsgrupo(List<Ur> ursgrupo) {
        this.ursgrupo = ursgrupo;
    }

    public StreamedContent getFile() {
        return file;
    }

    public void setFile(StreamedContent file) {
        this.file = file;
    }

    public Ur getUrSeleccionada() {
        return urSeleccionada;
    }

    public void setUrSeleccionada(Ur urSeleccionada) {
        this.urSeleccionada = urSeleccionada;
    }

    public ReportesControl getRc() {
        return rc;
    }

    public void setRc(ReportesControl rc) {
        this.rc = rc;
    }

    public List<Personal> getPersonal() {
        return personal;
    }

    public void setPersonal(List<Personal> personal) {
        this.personal = personal;
    }

    public String getValorBuscado() {
        return valorBuscado;
    }

    public void setValorBuscado(String valorBuscado) {
        this.valorBuscado = valorBuscado.toUpperCase();
    }


   public void CargaVentanaInserta(String ob){
    
            filteredUr=null;
            ur = new Ur();
            PrimeFaces.current().ajax().update(":formInsertar");
            PrimeFaces.current().executeScript("PF('dlginsertar').show();");
    }
   public void CargaVentanaModifica(){
    
            PrimeFaces.current().ajax().update(":formModificar");
            PrimeFaces.current().executeScript("PF('dlgmodificar').show();");
    }
   
  public void insertar(){
     
           ur.setIdUr(urdao.getNoUrSiguiente());
           ur.setNoUsuarioAlta(accesoC.getNoUsuario());
           int valor=urdao.insertaUr(ur);
           if(valor==1){
            msg.info("Procesado..", "Registro guardado");
           }else{
            msg.warn("Error..", "No se guardo la informacion");
           }
           PrimeFaces.current().executeScript("PF('dlginsertar').hide();");
        }
  
  public void modificar(){
           int valor=0;
            System.out.println("valor de ur: "+ur.getUr());
            ur.setNoUsuarioModif(accesoC.getNoUsuario());
             valor=urdao.actualizaUr(ur);
             if(valor==1){
            msg.info("Procesado..", "Registro actualizado");
             }else{
             msg.warn("Error", "No se actualizo la informacion");
                
             }
            
          PrimeFaces.current().executeScript("PF('dlgmodificar').hide();");
        }
  
      public void ActivarInactivar(int opcion){
        
       System.out.println("valor: " + ur.getIdUr());
       ur.setNoUsuarioBaja(accesoC.getNoUsuario());
                String dato = opcion == 1 ? "activó" : "inactivó";
                int valor = urdao.eliminaUr(ur,opcion);
                if (valor == 1) {
                    
                    msg.info("Procesado..", "Registro se "+dato);
                } else {
                    msg.warn("Error..", "No se "+dato+" el Registro");
                }
        PrimeFaces.current().executeScript("PF('dlgeliminar').hide();");
        }
      
    public void reporte(){
        String consulta = "",
                tituloReporte = "REPORTE UNIDADES RESPONSABLES",
                nombreReporte = "REPORTE_URS",
                noUsuario = "NO";

     file=rc.generaExcelReporte(consulta, tituloReporte, nombreReporte,noUsuario);
        }
    
    public void asignaNoPersonal(Personal per) {
        Integer noPer = per.getNoPersonalBm();
        System.out.println("usuarios.UrControl.asignaNoPersonal()" + noPer);
        ur.setNoPersonalBm(noPer);
        ur.setNomPersonal(per.getNombre()+" "+per.getAp1()+" "+per.getAp2());
        PrimeFaces.current().executeScript("PF('dlgasignarper').hide();");
    }

   public void asignapersonalBusqueda(String valor) {
        if (!valor.isEmpty()) {
            personal = pdao.traeRegistrosPersonalBusqueda(valor);
            PrimeFaces.current().executeScript("PF('dlgasignarper').show();");
            PrimeFaces.current().ajax().update(":formAsignarPer");
            valorBuscado = null;
        } else {
            personal = null;
            PrimeFaces.current().ajax().update(":formAsignarPer");
            valorBuscado = null;
        }

    }
        public void cancelarActualizar(){PrimeFaces.current().executeScript("PF('dlgmodificar').hide();");}
        public void cancelarEliminar(){PrimeFaces.current().executeScript("PF('dlgeliminar').hide();");}
        public void cancelarAsignarPersonal(){PrimeFaces.current().executeScript("PF('dlgasignarper').hide();");}

    public AccesoControl getAccesoC() {
        return accesoC;
    }

    public void setAccesoC(AccesoControl accesoC) {
        this.accesoC = accesoC;
    }
        
    
   
   
  
}
